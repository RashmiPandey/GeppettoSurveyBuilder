package com.geppetto.surveybuilder.service;

import java.util.ArrayList;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;

import com.geppetto.surveybuilder.domain.core.GpUser;
import com.geppetto.surveybuilder.domain.core.Option;
import com.geppetto.surveybuilder.mysql.OptionDao;

/**
 * 
 * @author Geppetto Generated Code</br> Date Created: </br>
 * @since </br> build: </p>
 *
 *        code was generated by the Geppetto System </br> Gepppetto system
 *        Copyright - Geppetto LLC 2014 - 2015</br> The generated code is free
 *        to use by anyone</p>
 *
 *
 *
 */
@Service("OptionService")
public class OptionService extends GpBaseService {

	OptionDao Option_dao;

	public OptionDao get_Option_dao() {
		return Option_dao;
	}

	@Resource(name = "OptionDao")
	public void set_Option_dao(OptionDao Option_dao) {
		this.Option_dao = Option_dao;
	}

	// auths not ready at this time
	public Option create_option(Option Option, GpUser user) throws Exception {

		try {
			Option the_Option;

			the_Option = Option_dao.create_option(Option, user);

			return the_Option;

		} catch (Exception e) {

			System.out.println("ServiceException: " + e.toString());

		}
		return null;

	}

	// auths not ready at this time
	public String delete_option(long id, GpUser user) throws Exception {

		try {
			String method_return_message;

			method_return_message = Option_dao.delete_option(id, user);

			return method_return_message;

		} catch (Exception e) {

			System.out.println("ServiceException: " + e.toString());

		}
		return null;

	}

	// auths not ready at this time
	public Option option_search_for_update(long id) throws Exception {

		try {
			Option the_Option;

			the_Option = Option_dao.option_search_for_update(id);

			return the_Option;

		} catch (Exception e) {

			System.out.println("ServiceException: " + e.toString());

		}
		return null;

	}

	// auths not ready at this time
	public Option update_option(Option Option, GpUser user) throws Exception {

		try {
			Option the_Option;

			the_Option = Option_dao.update_option(Option, user);

			return the_Option;

		} catch (Exception e) {

			System.out.println("ServiceException: " + e.toString());

		}
		return null;

	}

	// auths not ready at this time
	public ArrayList<Option> search_option(String Question_id, String Answer,
			String Answer_image, String Answer_type) throws Exception {

		try {
			ArrayList<Option> Option_list;

			Option_list = Option_dao.search_option(Question_id, Answer,
					Answer_image, Answer_type);

			return Option_list;

		} catch (Exception e) {

			System.out.println("ServiceException: " + e.toString());

		}
		return null;

	}

}