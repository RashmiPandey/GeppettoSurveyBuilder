package com.geppetto.surveybuilder.service;

import java.util.ArrayList;

import javax.annotation.Resource;

import org.springframework.stereotype.Service;

import com.geppetto.surveybuilder.domain.core.Country;
import com.geppetto.surveybuilder.domain.core.GpUser;
import com.geppetto.surveybuilder.mysql.CountryDao;





/**
 * 
 * @author Geppetto Generated Code</br>
 * Date Created: </br>
 * @since  </br>
   build:   </p> 
 *
 * code was generated by the Geppetto System </br>
 * Gepppetto system Copyright - Geppetto LLC 2014 - 2015</br>
 * The generated code is free to use by anyone</p>
 *
 *
 *
*/
@Service("CountryService")
public class CountryService extends GpBaseService  {


	CountryDao Country_dao;


	public CountryDao get_Country_dao() {
		return Country_dao;
	}


	@Resource(name="CountryDao")
	public void set_Country_dao(CountryDao Country_dao) {
		this.Country_dao = Country_dao;
	}



	//auths not ready at this time
	public Country country_search_for_update(long id, GpUser user) throws Exception {


		try{
			Country the_Country;

			the_Country = Country_dao.country_search_for_update(id, user);

			return the_Country;			

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());

		}
		return null;


	}

	//auths not ready at this time
	public Country update_country(Country Country, GpUser user) throws Exception {


		try{
			Country the_Country;

			the_Country = Country_dao.update_country(Country, user);

			return the_Country;			

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());

		}
		return null;


	}

	//auths not ready at this time
	public String  delete_country(long id, GpUser user) throws Exception {


		try{
			String method_return_message;

			method_return_message = Country_dao.delete_country(id, user);

			return method_return_message;			

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());

		}
		return null;


	}

	//auths not ready at this time
	public Country create_country(Country Country, GpUser user) throws Exception {


		try{
			Country the_Country;

			the_Country = Country_dao.create_country(Country, user);

			return the_Country;			

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());

		}
		return null;


	}

	//auths not ready at this time
	public ArrayList<Country> search_country(String  Common_name, String  Formal_name, String  Iso_three_letter_code, String  Capital, String  Currency_name, String  Telephone_code) throws Exception {


		try{
			ArrayList<Country> Country_list;

			Country_list = Country_dao.search_country(Common_name,Formal_name,Iso_three_letter_code,Capital,Currency_name,Telephone_code);

			return Country_list;			

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());

		}
		return null;


	}
	
	//auths not ready at this time
		public ArrayList<Country> search_all_country() throws Exception {


			try{
				ArrayList<Country> Country_list;

				Country_list = Country_dao.search_all_country();

				return Country_list;			

			}catch(Exception e){

				System.out.println("ServiceException: " + e.toString());

			}
			return null;


		}




}