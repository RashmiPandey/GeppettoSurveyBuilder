/**
 * 
 * @author Schubert Generated Code</br> Date Created: </br>
 * @since </br> build:
 *        </p>
 * 
 * code was generated by the Schubert System </br> Schubert system Copyright -
 * NewPortBay LLC copy_right_range</br> The generated code is free to use by
 * anyone
 * </p>
 * 
 * 
 * 
 */

app.controller("Store_Default_Activity", [ '$scope', '$rootScope', '$location', '$window', '$q', '$http', 'ProductId', 'RestURL',
				    function( $scope, $rootScope, $location, $window, $q, $http, ProductId, RestURL) {

		$scope.route = {
		        id: '',
		        store_name: '',
		        location: '',
		        route_id:''
		    };
	
		$scope.init = function () {
			$scope.getAllRoute();
		}
        
		$scope.closeModal = function () {
			$scope.getRoutesStore();
		}
		
		$scope.createStores =function(routeList){
			$scope.store = {
			        id: '',
			        store_name: '',
			        location: '',
			        route_id:''
				};
			$scope.storeList.route_id = routeList.id;
			$scope.storeList.id='';
			console.log("----$scope.storeList---",angular.toJson($scope.storeList));
			
		}
		
		
		$scope.setStores= function(selectedStores) {
			console.log("---------seletse storesz in store"+angular.toJson(selectedStores));
			if (selectedStores === undefined || selectedStores === null  ) {
				//var selectedClient_id = $scope.storeList.client_id;
				$scope.store = {
					        id: '',
					        store_name: '',
					        location: '',
					        route_id:''
						};
				console.log("---selectedStores---",selectedStores);
				$scope.store.id = selectedStores;
				console.log("---set store---"+angular.toJson($scope.store));
				$scope.storeList.id='';
			} else {
				$scope.storeList = selectedStores;
				console.log("-----in else part----",$scope.storeList)
			}
		}
		
		$scope.getAllRoute = function() {
        	$http.get( RestURL.baseURL+'Route/get_all_route_for_desktop').success(function(response) {
        		console.log("Route -> getAllRoute -> " + JSON.stringify( response ));
        		$scope.allRoutes= response;
        	}).error(function(err) {
   		  	 alert('You got' + err + 'error');
  		  });
        };
        
        $scope.routeList = null;
        
        $scope.setRoute= function() {
        	console.log("route -> setRoute -> $scope.client: " + JSON.stringify( $scope.routeList ));
        	if (!angular.isUndefined($scope.routeList) && $scope.routeList != null) {
        		$scope.route.id = $scope.routeList.id;
            
        		$scope.getRoutesStore();
        	} else {
        		//$scope.storeList.id = '';
            	$scope.routesStore = null;
        	}
        	
        };
		
		$scope.getRoutesStore = function() {
			console.log("Route -> getRoutesStore -> $scope.Store.route_id: " + $scope.route.id);
        	$http.get( RestURL.baseURL+'Store/get_all_store_by_route_id/'+ $scope.route.id ).success(function(response) {
        		console.log("Store -> StoreList for Route -> " + JSON.stringify( response ));
        		$scope.routesStore = response;
        	}).error(function(err) {
   		  	 alert('You got' + err + 'error');
  		  });
        };
        
        $scope.create = function () {
        	//console.log("------------i am heRE---------------"+angular.toJson( $scope.storeList));
			//console.log("-----store id---"+$scope.store.id)
			//$scope.storeList=$scope.store;
		  var deferred = $q.defer();
		  $http.post(RestURL.baseURL+'Store/create_store', $scope.storeList).success(function(response) {
		  	 alert('Store created successfully');
			  	$scope.getRoutesStore();
			  	$('#create_product_modal').modal('hide');
		  	 deferred.resolve(response);
		  }).error(function(err) {
		  	 alert('You got' + err + 'error');
		  	 deferred.reject(err);
		  });

		  return deferred.promise; 


        };

        $scope.search_for_update = function (id) {

		  $http.get(RestURL.baseURL+'Product_Default_Activity/search_for_update_Product/' + id).success(function(response) {
		  	 console.log('Store updated successfully');
		  	 $scope.product = response
		  	 // ProductId.setId(undefined)
		  }).error(function(err) {
		  	 alert('You got' + err + 'error');
		  });

        };

        $scope.update = function () {

		  var deferred = $q.defer();
		  console.log("------"+angular.toJson($scope.storeList));
		  
		  $http.post(RestURL.baseURL+'Store/update_store', $scope.storeList).success(function(response) {
		  	 alert('Store updated successfully.');
			  	$scope.getRoutesStore();
			  	$('#create_product_modal').modal('hide');
		  	 deferred.resolve(response);
		  }).error(function(err) {
		  	 alert('You got' + err + 'error');
		  	 deferred.reject(err);
		  });

		  return deferred.promise; 


        };

        $scope.delete = function () {

		  var deferred = $q.defer();
		  $http.post(RestURL.baseURL+'Store/delete_store/',$scope.storeList).success(function(response) {
		  	 alert('Store deleted successfully');
		  	$scope.getRoutesStore();
		  	$('#create_product_modal').modal('hide');
		  	 deferred.resolve(response);
		  }).error(function(err) {
		  	 alert('You got' + err + 'error');
		  	 deferred.reject(err);
		  });

		  return deferred.promise; 


        };

        $scope.get_all_values = function () {

        };

		$scope.$on('$viewContentLoaded', function(event) {
			var biggestHeight = 0;
			var height = 0;
			$(".screen").find('*').each(function(){
				height = $(this).position().top + $(this).height() + 100;
				if (height > biggestHeight ) {
					biggestHeight = height;
				}
			});
			$(".screen").height(biggestHeight);
		});

		$scope.init();
}]);


